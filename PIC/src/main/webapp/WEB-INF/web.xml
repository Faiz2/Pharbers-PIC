<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>dataCenter</display-name>
	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 拦截Request里的流（getReader()、getInputStream()） -->
	<filter>  
	    <filter-name>requestFilter</filter-name>  
	    <filter-class>pha.com.common.base.filter.HttpServletRequestReplacedFilter</filter-class>  
	</filter>
	<filter-mapping>  
	    <filter-name>requestFilter</filter-name>  
		<url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	
	<!-- Shiro Security filter  filter-name这个名字的值将来还会在spring中用到  -->
    <!--<filter>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>targetFilterLifecycle</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>-->
       <!--&lt;!&ndash;  <init-param> -->
	       <!--<param-name>staticSecurityManagerEnabled</param-name> -->
	       <!--<param-value>true</param-value> -->
	   <!--</init-param>  &ndash;&gt;-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>shiroFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    
    <!-- <filter>
        <filter-name>sessionFilter</filter-name>
        <filter-class>pha.com.common.base.filter.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
        <filter-name>sessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
	<!-- 日志配置 -->  
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>classpath:log4j.xml</param-value>  <!-- properties -->
    </context-param>  
    <context-param>    
	    <param-name>log4jRefreshInterval</param-name>    
	    <param-value>60000</param-value>    
	</context-param> 
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>dataCenter.root</param-value>  
	</context-param>
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>

	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring和mybatis的配置文件,国际化配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-mybatis.xml,classpath:Spring-config.xml</param-value>
	</context-param>
	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- Spring MVC servlet -->
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 图片拖拉验证码（极验验证） -->
	<servlet>
		<servlet-name>StartCaptchaServlet</servlet-name>
		<display-name>StartCaptchaServlet</display-name>
		<description></description>
		<servlet-class>pha.com.common.util.verify.geetest.StartCaptchaServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>VerifyLoginServlet</servlet-name>
		<display-name>VerifyLoginServlet</display-name>
		<description></description>
		<servlet-class>pha.com.common.util.verify.geetest.VerifyLoginServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>VerifyLoginServlet</servlet-name>
		<url-pattern>/VerifyLoginServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>StartCaptchaServlet</servlet-name>
		<url-pattern>/StartCaptchaServlet</url-pattern>
	</servlet-mapping>

	<!-- 图片随机验证码生成（字母数字、汉字、纯字母、纯数字） -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>CheckServlet</servlet-name> -->
<!-- 		<display-name>CheckServlet</display-name> -->
<!-- 		<description></description> -->
<!-- 		<servlet-class>pha.com.common.util.verify.image.CheckServlet</servlet-class> -->
<!-- 	</servlet> -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>DrawImage</servlet-name> -->
<!-- 		<display-name>DrawImage</display-name> -->
<!-- 		<description></description> -->
<!-- 		<servlet-class>pha.com.common.util.verify.image.DrawImage</servlet-class> -->
<!-- 	</servlet> -->

<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>CheckServlet</servlet-name> -->
<!-- 		<url-pattern>/CheckServlet</url-pattern> -->
<!-- 	</servlet-mapping> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>DrawImage</servlet-name> -->
<!-- 		<url-pattern>/DrawImage</url-pattern> -->
<!-- 	</servlet-mapping> -->
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
		<error-code>404</error-code>
		<location>/assets/cloud/404/404.jsp</location>
	</error-page>
	
	<!-- 配置SESSION超时，单位是分钟 -->
	<session-config>
		<session-timeout>15</session-timeout>
	</session-config>


</web-app>
