<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       					   http://www.springframework.org/schema/context
       					   http://www.springframework.org/schema/context/spring-context-4.2.xsd
       					   http://www.springframework.org/schema/aop 
       					   http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
<description>Shiro</description>

	<!-- Shiro Session（会话）管理 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">    
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name ="sessionListeners" ref="sessionListener"/>
        <!-- <property name="cacheManager" ref="shiroEhcacheManager"/>   -->
	</bean>
	
	<bean id="sessionListener" class="pha.com.common.base.filter.SessionListener"><!-- <property name="interval" value="180000"/> --></bean>
	
    
    <!-- 会话DAO，sessionManager里面的session需要保存在会话Dao里，没有会话Dao，session是瞬时的，没法从  
     sessionManager里面拿到session -->    
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">    
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean> 
    
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">    
        <constructor-arg value="sid"/>  
        <property name="httpOnly" value="true"/>  
        <property name="maxAge" value="-1"/>   
	</bean>
	
	<!--  -->
	<bean id="kickoutSessionControlFilter"  class="pha.com.common.base.shiro.KickoutSessionControlFilter">
		<property name="cacheManager" ref="shiroEhcacheManager"/>     
	    <property name="sessionManager" ref="sessionManager"/>   
	     
	    <property name="kickoutAfter" value="false"/>    
	    <property name="maxSession" value="30"/>    
	    <property name="kickoutUrl" value="http://127.0.0.1/PharbersSSO?kickout=1"/>
<!-- 	    <property name="kickoutUrl" value="http://www.pharbers:82/PharbersSSO?kickout=1"/> -->
	</bean>
	
	
	<!-- 会话验证调度器 -->  
    <!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
        <property name="sessionValidationInterval" value="1800000"/>  
        <property name="sessionManager" ref="sessionManager"/>  
    </bean> -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler ">
        <property name="interval" value="180000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
	
	<!-- 会话ID生成器 -->  
 	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>  
    
	<!-- 安全管理 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="authRealm"/><!-- 引用自定义的realm -->
        <property name="cacheManager" ref="shiroEhcacheManager"/><!-- shiroEhcacheManager -->
        <property name="sessionManager" ref="sessionManager"></property><!-- shiro session管理器 -->  
    </bean>
    
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
<!--         <property name="redirectUrl" value="http://www.pharbers:82/PharbersSSO/" /> -->
        <property name="redirectUrl" value="http://127.0.0.1/PharbersSSO/" />
    </bean> 
    
    <bean id="sysUserFilter" class="pha.com.common.base.shiro.SysUserFilter"/>

    <!--shiroFilter名字不能随意起      <filter-name>shiroFilter</filter-name>-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
<!--         <property name="loginUrl" value="http://www.pharbers:82/PharbersSSO/"></property> -->
        <property name="loginUrl" value="http://127.0.0.1/PharbersSSO/"></property>
<!--         <property name="successUrl" value="/home/index1"></property> -->
		<!-- 没有权限或者失败后跳转的页面 -->
        <property name="unauthorizedUrl" value="/assets/cloud/404/404"></property>
        <property name="filters">    
	        <map>    
	            <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
	            <entry key="sysUser" value-ref="sysUserFilter"/>   
	        </map>    
	    </property>
	     
        <property name="filterChainDefinitions">
            <!-- , roles[admin], perms[document:read]-->
            <value>
            	/assets/** = anon
            	/admin/Login = anon
            	/SMS/SMSInfo = anon
            	/registerInfo/** = anon
            	/VerifyLoginServlet = anon
            	/StartCaptchaServlet = anon
            	/home/Test = anon
            	/exportWord/** = anon
            	/userInfo/login = kickout,anon
             	/userInfo/logoutSystem = logout
            	/admin/* = authc
				/home/* = authc
				/** = kickout,authc,sysUser
            </value>
        </property>
    </bean>

    <!-- 用户授权/认证信息Cache, 采用EhCache  缓存 -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>
    
    <!-- 自定义权限认证 -->
    <bean id="authRealm" class="pha.com.common.base.shiro.AuthRealm">
		<!-- <property name="userService" ref="userService"/> -->
		<!-- 自定义密码加密算法  -->
		<property name="credentialsMatcher" ref="passwordMatcher"/>
	</bean>
	
	<!-- 设置密码加密策略 md5hash -->
	<bean id="passwordMatcher" class="pha.com.common.base.shiro.CustomCredentialsMatcher"/>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 生成代理，通过代理进行控制 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    
    <!-- 安全管理器 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>
